import * as Weather from '../contracts/IWeatherRecord';

function getRandomInt(min: number, max: number): number {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function randomEnum<T>(anEnum: T): T[keyof T] {
    const enumValues = Object.keys(anEnum)
      .map(n => Number.parseInt(n))
      .filter(n => !Number.isNaN(n)) as unknown as T[keyof T][]
    const randomIndex = Math.floor(Math.random() * enumValues.length)
    const randomEnumValue = enumValues[randomIndex]
    return randomEnumValue;
  }

const locations: string[] = [
    'Moscow',
    'Saint Petersburg',
    'Novosibirsk',
    'Yekaterinburg',
    'Kazan',
    'Nizhny Novgorod',
    'Chelyabinsk',
    'Samara',
    'Omsk',
    'Rostov-on-Don',
    'Ufa',
    'Krasnoyarsk',
    'Voronezh',
    'Perm',
    'Volgograd',
    'Krasnodar',
    'Saratov',
    'Tyumen',
    'Tolyatti',
    'Izhevsk',
    'Barnaul',
    'Ulyanovsk',
    'Irkutsk',
    'Khabarovsk',
    'Yaroslavl',
    'Vladivostok',
    'Makhachkala',
    'Tomsk',
    'Orenburg',
    'Kemerovo',
    'Novokuznetsk',
    'Ryazan',
    'Naberezhnye Chelny',
    'Astrakhan',
    'Penza',
    'Kirov',
    'Lipetsk',
    'Balashikha',
    'Cheboksary',
    'Kaliningrad',
    'Tula',
    'Kursk',
    'Stavropol',
    'Sochi',
    'Ulan-Ude',
    'Tver',
    'Magnitogorsk',
    'Ivanovo',
    'Sevastopol',
    'Bryansk',
    'Belgorod',
    'Surgut',
    'Vladimir',
    'Chita',
    'Nizhny Tagil',
    'Arkhangelsk',
    'Simferopol',
    'Kaluga',
    'Smolensk',
    'Volzhsky',
    'Yakutsk',
    'Saransk',
    'Cherepovets',
    'Kurgan',
    'Vologda',
    'Oryol',
    'Podolsk',
    'Grozny',
    'Vladikavkaz',
    'Tambov',
    'Murmansk',
    'Petrozavodsk',
    'Nizhnevartovsk',
    'Kostroma',
    'Sterlitamak',
    'Novorossiysk',
    'Yoshkar-Ola',
    'Khimki',
    'Taganrog',
    'Komsomolsk-on-Amur',
    'Syktyvkar',
    'Nizhnekamsk',
    'Nalchik',
    'Mytishchi',
    'Shakhty',
    'Dzerzhinsk',
    'Engels',
    'Orsk',
    'Blagoveshchensk',
    'Bratsk',
    'Korolyov',
    'Veliky Novgorod',
    'Angarsk',
    'Stary Oskol',
    'Pskov',
    'Lyubertsy',
    'Yuzhno-Sakhalinsk',
    'Biysk',
    'Prokopyevsk',
    'Armavir',
    'Balakovo',
    'Abakan',
    'Rybinsk',
    'Severodvinsk',
    'Norilsk',
    'Petropavlovsk-Kamchatsky',
    'Krasnogorsk',
    'Ussuriysk',
    'Volgodonsk',
    'Novocherkassk',
    'Syzran',
    'Kamensk-Uralsky',
    'Zlatoust',
    'Almetyevsk',
    'Elektrostal',
    'Kerch',
    'Miass',
    'Salavat',
    'Pyatigorsk',
    'Kopeysk',
    'Nakhodka',
    'Khasavyurt',
    'Rubtsovsk',
    'Maykop',
    'Kolomna',
    'Berezniki',
    'Domodedovo',
    'Kovrov',
    'Odintsovo',
    'Neftekamsk',
    'Kislovodsk',
    'Bataysk',
    'Nefteyugansk',
    'Novocheboksarsk',
    'Serpukhov',
    'Shchyolkovo',
    'Derbent',
    'Kaspiysk',
    'Cherkessk',
    'Novomoskovsk',
    'Nazran',
    'Ramenskoye',
    'Pervouralsk',
    'Kyzyl',
    'Orekhovo-Zuyevo',
    'Novy Urengoy',
    'Obninsk',
    'Nevinnomyssk',
    'Dolgoprudny',
    'Oktyabrsky',
    'Dimitrovgrad',
    'Yessentuki',
    'Kamyshin',
    'Yevpatoria',
    'Reutov',
    'Pushkino',
    'Zhukovsky',
    'Murom',
    'Noyabrsk',
    'Novoshakhtinsk',
    'Seversk',
    'Artyom',
    'Achinsk',
    'Berdsk',
    'Arzamas',
    'Noginsk',
    'Elista',
    'Yelets',
    'Khanty-Mansiysk',
    'Novokuybyshevsk',
    'Zheleznogorsk',
    'Sergiyev Posad',
    'Zelenodolsk',
    'Tobolsk',
    'Votkinsk',
    'Mezhdurechensk',
    'Sarov',
    'Serov',
    'Mikhaylovsk',
    'Sarapul',
    'Leninsk-Kuznetsky',
    'Ukhta',
    'Voskresensk',
    'Solikamsk',
    'Glazov',
    'Magadan',
    'Gatchina',
    'Velikiye Luki',
    'Michurinsk',
    'Lobnya',
    'Kansk',
    'Anapa',
    'Kamensk-Shakhtinsky',
    'Kiselyovsk',
    'Gubkin',
    'Buzuluk',
    'Novotroitsk',
    'Yeysk',
    'Zheleznogorsk',
    'Bugulma',
    'Chaykovsky',
    'Ivanteyevka',
    'Kineshma',
    'Yurga',
    'Kuznetsk',
    'Azov',
    'Ust-Ilimsk',
    'Novouralsk',
    'Klin',
    'Yalta',
    'Ozyorsk',
    'Kropotkin',
    'Vidnoye',
    'Bor',
    'Gelendzhik',
    'Usolye-Sibirskoye',
    'Balashov',
    'Chernogorsk',
    'Vyborg',
    'Dubna',
    'Vsevolozhsk',
    'Shadrinsk',
    'Novoaltaysk',
    'Yelabuga',
    'Mineralnye Vody',
    'Troitsk',
    'Yegoryevsk',
    'Verkhnyaya Pyshma',
    'Chekhov',
    'Birobidzhan',
    'Chapayevsk',
    'Belovo',
    'Kirovo-Chepetsk',
    'Dmitrov',
    'Tuymazy',
    'Anzhero-Sudzhensk',
    'Feodosia',
    'Slavyansk-na-Kubani',
    'Minusinsk',
    'Kstovo',
    'Kogalym',
    'Sosnovy Bor',
    'Georgiyevsk',
    'Sunzha',
    'Stupino',
    'Buynaksk',
    'Zarechny',
    'Belogorsk',
    'Murino',
    'Beloretsk',
    'Naro-Fominsk',
    'Kungur',
    'Gorno-Altaysk',
    'Ishim',
    'Ishimbay',
    'Pavlovsky Posad',
    'Gukovo',
    'Klintsy',
    'Asbest',
    'Urus-Martan',
    'Rossosh',
    'Donskoy',
    'Kotlas',
    'Volsk',
    'Leninogorsk',
    'Zelenogorsk',
    'Revda',
    'Budyonnovsk',
    'Tuapse',
    'Polevskoy',
    'Sibay',
    'Izberbash',
    'Lysva',
    'Borisoglebsk',
    'Fryazino',
    'Kumertau',
    'Chistopol',
    'Labinsk',
    'Lesosibirsk',
    'Belebey',
    'Lytkarino',
    'Beryozovsky',
    'Nyagan',
    'Prokhladny',
    'Tikhvin',
    'Neryungri',
    'Krymsk',
    'Alexandrov',
    'Aleksin',
    'Rzhev',
    'Mikhaylovka',
    'Shchyokino',
    'Tikhoretsk',
    'Shuya',
    'Salsk',
    'Pavlovo',
    'Meleuz',
    'Sertolovo',
    'Dzerzhinsky',
    'Krasnoturyinsk',
    'Iskitim',
    'Gudermes',
    'Shali',
    'Apatity',
    'Svobodny',
    'Severomorsk',
    'Liski',
    'Volzhsk',
    'Vyksa',
    'Gus-Khrustalny',
    'Vorkuta',
    'Krasnokamsk',
    'Vyazma',
    'Arsenyev',
    'Snezhinsk',
    'Zhigulyovsk',
    'Belorechensk',
    'Krasnokamensk',
    'Salekhard',
    'Timashyovsk',
    'Kirishi',
    'Solnechnogorsk',
    'Cheremkhovo',
];

export function InventWeather(hours: number): Weather.IWeatherRecord[] {
    return locations.map(location => {
        const byHourForecast: Weather.ISimpleWeatherRecord[] = [];
        for (let h = 0; h <= hours; h++) {
            byHourForecast.push({
                temperatureCelcius: getRandomInt(-50, 50), 
                atmosphericPressureMmHg: getRandomInt(641, 816), 
                humidityPercents: getRandomInt(1, 100), 
                windVelocityMps: getRandomInt(0, 40), 
                windDirection: randomEnum(Weather.WindDirection),
            });
        }
        return {
            location,
            byHourForecast,
            isFavourite: false,
        };
    });
}